%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Report Template for TumorBoost
%
% Required objects:
%  - sampleName, e.g. sampleName <- "TCGA-02-0014";
%
% Author: Henrik Bengtsson, hb@stat.berkeley.edu
% Created on: 2009-03-11
%
% Usage:
%  library("R.rsp");
%  sampleName <- "TCGA-02-0069";
%  rsptex("pair.tex.rsp", pdf=TRUE); # *.tex.rsp => ... => *.pdf
%
% Advanced:
%  library("R.rsp");
%  sampleName <- "TCGA-06-0176";
%  rsptex("pair.tex.rsp", pdf=TRUE, envir=globalenv(), force=TRUE);
%  file.rename("pair.pdf", sprintf("%s,pair.pdf", sampleName));
%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% 
<%
if (!exists("sampleName")) {
  throw("Parameter 'sampleName' missing.");
}

figForce <- TRUE;

dataSet <- "TCGA_GBM,Broad,2.0";
dataSetTags <- "ACC,ra,-XY,USE.ME=TRUE,BPN,-XY,AVG,FLN,-XY";
chipType <- "GenomeWideSNP_6";
%>

<%
annotations <- c(fullname=FALSE, n=FALSE, chr=TRUE);
chromosomes <- 1:24;
chromosomes <- 9;
#chromosomes <- 18:19;
%>


<%
title <- "Short Report";
authors <- "TCGA";
figPath <- "figures/col/";
figForce <- TRUE;
figForce <- FALSE;
docId <- c("TCGA", "LBNL", "GDAC-A", format(Sys.Date(), "%Y-%m-%d"), "doc04");
docId <- paste(docId, collapse="/");
%>

<%
sourceDirectory("R/");
%>


<%
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
# Setup data
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
if (!exists("ces") || !inherits(ces, "SnpChipEffectSet")) {
  ces <- SnpChipEffectSet$byName(dataSet, tags=dataSetTags, 
                                   chipType=chipType, mergeStrands=TRUE);
  setFullNamesTranslator(ces, function(names, ...) {
    pattern <- "^(TCGA-[0-9]{2}-[0-9]{4})-([0-9]{2}.)-(.*)$"
    names <- gsub(pattern, "\\1,\\2,\\3", names);
    names <- gsub(",chipEffects", "", names);
    names;
  })

  print(ces);
}

# Extract all normals 
is10 <- sapply(ces, FUN=function(cf) any(regexpr("^10", getTags(cf)) != -1));
is11 <- sapply(ces, FUN=function(cf) any(regexpr("^11", getTags(cf)) != -1));
isNormal <- (is10 | is11);
cesN <- extract(ces, isNormal);
ceNR <- getAverageFile(cesN);
print(ceNR);

cdf <- getCdf(ces);
unitTypes <- getUnitTypes(cdf);
ugp <- AromaUgpFile$byChipType(getChipType(ces));
%>

<%
# Extract (tumor,normal) pair
cesTN <- extract(ces, indexOf(ces, sampleName));
typeTags <- sapply(cesTN, getTags)[1,];
cesTN <- extract(cesTN, order(typeTags));
stopifnot(length(cesTN) == 2);
%>

<%
# Extract tumor normal pair of interest
pairTag <- sapply(cesTN, FUN=function(df) getTags(df)[1]);
pairTag <- paste(pairTag, collapse="vs");
fullname <- sprintf("%s,%s", sampleName, pairTag);

betalim <- c(0,1) + c(-1,1)*0.2;
cnlim <- c(0,5)+c(-1,1)*0.2;
%>


%#####################################################################
% BEGIN Document
%#####################################################################
\documentclass[letter]{article}

\addtolength{\topmargin}{-0.8in}
\addtolength{\textheight}{1.6in}
\addtolength{\oddsidemargin}{-0.8in}
\addtolength{\evensidemargin}{-0.8in}
\addtolength{\textwidth}{1.6in}


%% % Avoid page breaks at new chapters
%% \makeatletter
%% \renewcommand\chapter{\par%
%%   \thispagestyle{plain}%
%%   \global\@topnum\z@
%%   \@afterindentfalse
%%   \secdef\@chapter\@schapter}
%% \makeatother

\usepackage[pdftex]{graphicx}
\usepackage{fancyvrb}


% Fancy headers
\usepackage{fancyhdr}
\setlength{\headheight}{15.2pt}
\pagestyle{fancy}
\renewcommand{\headrulewidth}{2pt}
\renewcommand{\footrulewidth}{2pt}
\fancyhf{}
%\renewcommand{\chaptermark}[1]{\markboth{#1}{}}
%\renewcommand{\sectionmark}[1]{\markright{#1}{}}
\lhead{TCGA}
\rhead{\today}
\lfoot{\small DOC ID: <%=docId%>}
\rfoot{\thepage}

% The search path (within curly brackets and separated by commas)
% where to find graphics files
\graphicspath{{<%=figPath%>}}
\DeclareGraphicsRule{.eps.gz}{eps}{.eps.bb}{`gunzip -c #1}

\renewcommand{\topfraction}{1.0}    % max fraction of floats at top
\renewcommand{\bottomfraction}{1.0} % max fraction of floats at bottom

\title{<%=title%>}
\author{<%=authors%>}

\begin{document}

\maketitle


% = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = 
\section*{Dataset}
% = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = 
\begin{itemize}
  \item Data set: {<%=le(dataSet)%>}
  \item Data set tags: <%=le(dataSetTags)%>
  \item Sample: <%=le(sampleName)%>
  \item Tumor-normal pair: <%=le(pairTag)%>
  \item Full name: <%=le(fullname)%>
\end{itemize}


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\part*{A single tumor-normal pair}
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\begin{Verbatim}
<%=rspCapture(cesTN)%>
\end{Verbatim}


\clearpage
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\part*{Chromosome by chromosome}
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

% - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
% BEGIN Figure (betaT vs betaN) for each chromosome
% - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
<%
# Graphics settings
lim <- c(0,1);
xlab <- "Allele B fraction for Normal";
ylab <- "Allele B fraction for Tumor";
width <- 1;
height <- 0.7*width;
smoothTag <- "thin";
%>

<% for (chr in chromosomes) { %>
\clearpage
\section{Chromosome <%=chr%>}
<%
# Data of interest
data <- NULL;
%>

\subsection{Tumor and normal signals}

<%
figName <- sprintf("%s,Chr%02d,pair,totalAndFracB", fullname, chr);
filename <- sprintf("%s.png", figName);
pathname <- Arguments$getWritablePathname(filename, path=figPath);
if (figForce || !isFile(pathname)) {
  devNew(figDev, pathname, width=width, height=2*height);
  par(mar=c(3.5,4,1,1)+0.1, mgp=c(2.5,0.8,0), cex=1.5);
  subplots(4, ncol=1);
%>
<%
if (is.null(data)) {
  data <- getUnitsToStudy(cesTN, chr, subset=NULL);
  nbrOfUnits <- data$nbrOfUnits;
  str(data);
}

xlab <- "Physical position (Mb)";
x <- data$position;

y <- data$C;
ylab <- "C = 2*total[T]/total[N]";
plot(x, y, pch=".", ylim=cnlim, xlab=xlab, ylab=ylab);
stext(side=3, pos=0, sprintf("Tumor/normal: %s", getNames(cesTN)[1]));
stext(side=3, pos=1, sprintf("Chromosome %d (n=%d)", chr, nbrOfUnits));

y <- data$CN;
ylab <- "C = 2*total[N]/total[Nref]";
plot(x, y, pch=".", ylim=cnlim, xlab=xlab, ylab=ylab);
stext(side=3, pos=0, sprintf("Normal/normalRef: %s", getNames(cesTN)[1]));
stext(side=3, pos=1, sprintf("Chromosome %d (n=%d)", chr, nbrOfUnits));

y <- data$betaT[,2];
ylab <- "beta[T]";
plot(x, y, pch=".", ylim=betalim, xlab=xlab, ylab=ylab);
stext(side=3, pos=0, sprintf("Tumor: %s", getFullNames(cesTN)[1]));
stext(side=3, pos=1, sprintf("Chromosome %d (n=%d)", chr, nbrOfUnits));

y <- data$betaN[,2];
ylab <- "beta[N]";
plot(x, y, pch=".", ylim=betalim, xlab=xlab, ylab=ylab);
stext(side=3, pos=0, sprintf("Normal: %s", getNames(cesTN)[1]));
stext(side=3, pos=1, sprintf("Chromosome %d (n=%d)", chr, nbrOfUnits));
%>

<%
    devDone();
} # if (!isFile(pathname))
%>

\begin{figure}[htbp]
 \begin{center}
  \resizebox{!}{0.71\textheight}{\includegraphics{<%=figName%>}} %
 \end{center}
 \caption{Differences in allele B fractions between the tumor and the normal of sample <%=sampleName%> on chromosome~<%=chr%>.}
 \label{fig<%=fullname%>}
\end{figure}



\clearpage
\subsection{Tumor-normal differences}

<%
figName <- sprintf("%s,Chr%02d,deltaFracB", fullname, chr);
filename <- sprintf("%s.png", figName);
pathname <- Arguments$getWritablePathname(filename, path=figPath);
if (figForce || !isFile(pathname)) {
  devNew(figDev, pathname, width=width, height=height);
  par(mar=c(3.5,4,1,1)+0.1, mgp=c(2.5,0.8,0), cex=1.5);
  subplots(2, ncol=1);
%>
<%
if (is.null(data)) {
  data <- getUnitsToStudy(cesTN, chr, subset=NULL);
  nbrOfUnits <- data$nbrOfUnits;
  str(data);
}

col <- c("blue", "purple", "red")[data$genotypesN];

xlab <- "Physical position (Mb)";
fracBLab <- expression(beta[T]-beta[N]);
x <- data$position;
ylim <- c(-1.0,1.0) + c(-1,1)*0.2;
ylab <- "rho = beta[T]-beta[N]";
plot(x, data$rho, pch=".", col=col, ylim=ylim, xlab=xlab, ylab=ylab);
stext(side=3, pos=0, sprintf("Pair: %s", getFullNames(cesTN)[1]));
stext(side=3, pos=1, sprintf("Chromosome %d (n=%d)", chr, nbrOfUnits));
ylim <- c(0.0,1.0);
ylab <- "abs(rho)";
plot(x, abs(data$rho), pch=".", col=col, ylim=ylim, xlab=xlab, ylab=ylab);

for (probs in c(0.05, 0.95)) {
  FUN <- function(X, ..., na.rm=TRUE) colQuantiles(as.matrix(X), probs=probs);
  cat("Quantile binning...\n");
  qq <- binnedSmoothing(abs(data$rho), x=x, FUN=FUN, by=1.0);
  cat("Quantile binning...done\n");
  xx <- attr(qq, "xOut");
  o <- order(xx);
  xx <- xx[o];
  qq <- qq[o];
  keep <- (is.finite(xx) & is.finite(qq));
  xx <- xx[keep];
  qq <- qq[keep];
  lines(xx, qq, col="white", lwd=4);
  lines(xx, qq, col="orange", lwd=2);
} # for (probs ...)
%>

<%
    devDone();
} # if (!isFile(pathname))
%>

\begin{figure}[htbp]
 \begin{center}
  \resizebox{0.90\textwidth}{!}{\includegraphics{<%=figName%>}} %
 \end{center}
 \caption{Differences in allele B fractions between the tumor and the normal of sample <%=sampleName%> on chromosome~<%=chr%>.}
 \label{fig<%=fullname%>}
\end{figure}




\clearpage
\subsection{Improved Allele B fractions for tumors (via TumorBoost)}
<%
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
# Pairwise fracB scatter plot annotated by genotype
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
figNames <- c();
tags <- c("raw", "byTheta", "byBeta", "byPolar");
for (pp in seq(along=tags)) {
  tag <- tags[pp];
  figName <- sprintf("%s,Chr%02d,pair,fracB,%s", fullname, chr, tag);
  filename <- sprintf("%s.png", figName);
  pathname <- Arguments$getWritablePathname(filename, path=figPath);
  if (figForce || !isFile(pathname)) {
    devNew(figDev, pathname, width=width, height=width);
    par(mar=c(3.5,4,1,1)+0.1, mgp=c(2.5,0.8,0), cex=1.5);
    subplots(1, ncol=1);
  
    if (is.null(data)) {
      data <- getUnitsToStudy(cesTN, chr, subset=NULL);
      nbrOfUnits <- data$nbrOfUnits;
      str(data);
    }

    yys <- list(raw=data$betaT[,2], theta=asTotalFracBSnpData(data$thetaTB)[,2], beta=data$betaTB[,2], polar=asTotalFracBSnpData(data$polarTB)[,2]);
    ylabs <- c("beta[T]", "mu*[T]", "mu*[T]", "mu*[T]");
    ylabs[2:4] <- paste(ylabs[2:4], "by", names(yys)[2:4]);

    xx <- data$betaN[,2];
    yy <- yys[[pp]];
  
    xlab <- "beta[N]";
    ylab <- ylabs[pp];
    col <- c("blue", "purple", "red")[data$genotypesN];
    plot(xx, yy, pch=".", col=col, xlim=betalim, ylim=betalim, xlab=xlab, ylab=ylab);
    points(c(0,1/2,1), c(0,1/2,1), pch="+", cex=2, col="black");
    fit <- attr(data$betaNC, "fit");
    abline(v=fit$x, lty=3);
    d <- density(xx, adjust=1.5);
    d$y <- 0.1*diff(lim)*(d$y/max(d$y)) + par("usr")[3];
    lines(d, col="#999999", lwd=2);
    stext(side=3, pos=0, sprintf("Tumor/normal: %s", getNames(cesTN)[1]));
    stext(side=3, pos=1, sprintf("Chromosome %d (n=%d)", chr, nbrOfUnits));
  
    devDone();
  } # if (!isFile(pathname))
  figNames <- c(figNames, figName);
} # for (pp ...)


for (pp in seq(along=tags)) {
  tag <- tags[pp];
  figName <- sprintf("%s,Chr%02d,pair,fracBvCN,%s", fullname, chr, tag);
  filename <- sprintf("%s.png", figName);
  pathname <- Arguments$getWritablePathname(filename, path=figPath);
  if (figForce || !isFile(pathname)) {
    devNew(figDev, pathname, width=width, height=width);
    par(mar=c(3.5,4,1,1)+0.1, mgp=c(2.5,0.8,0), cex=1.5);
    subplots(1, ncol=1);
  
    if (is.null(data)) {
      data <- getUnitsToStudy(cesTN, chr, subset=NULL);
      nbrOfUnits <- data$nbrOfUnits;
      str(data);
    }

    xxs <- list(raw=data$C, theta=data$thetaC, beta=data$betaC, polar=data$polarC);
    yys <- list(raw=data$betaT[,2], theta=asTotalFracBSnpData(data$thetaTB)[,2], beta=data$betaTB[,2], polar=asTotalFracBSnpData(data$polarTB)[,2]);
    ylabs <- c("beta[T]", "mu*[T]", "mu*[T]", "mu*[T]");
    ylabs[2:4] <- paste(ylabs[2:4], "by", names(yys)[2:4]);

    xx <- xxs[[pp]];
    yy <- yys[[pp]];
  
    xlab <- "C=2*theta[T]/theta[N]";
    ylab <- ylabs[pp];
    col <- c("blue", "purple", "red")[data$genotypesN];
    plot(xx, yy, pch=".", col=col, xlim=cnlim, ylim=betalim, xlab=xlab, ylab=ylab);
    abline(h=c(0,1/2,1), lty=3);
    stext(side=3, pos=0, sprintf("Tumor/normal: %s", getNames(cesTN)[1]));
    stext(side=3, pos=1, sprintf("Chromosome %d (n=%d)", chr, nbrOfUnits));
  
    devDone();
  } # if (!isFile(pathname))
  figNames <- c(figNames, figName);
} # for (pp ...)


### figName <- sprintf("%s,Chr%02d,pair,RhoVsCN", fullname, chr);
### filename <- sprintf("%s.png", figName);
### pathname <- Arguments$getWritablePathname(filename, path=figPath);
### if (figForce || !isFile(pathname)) {
###   devNew(figDev, pathname, width=width, height=width);
###   par(mar=c(3.5,4,1,1)+0.1, mgp=c(2.5,0.8,0), cex=1.5);
###   subplots(1, ncol=1);
### 
###   if (is.null(data)) {
###     data <- getUnitsToStudy(cesTN, chr, subset=NULL);
###     nbrOfUnits <- data$nbrOfUnits;
###     str(data);
###   }
### 
###   xlab <- "C=2*theta[T]/theta[N]";
###   ylab <- "rho=beta[T]-beta[N]";
###   lim <- c(0,1) + c(-1,1)*0.2;
###   col <- c("blue", "purple", "red")[data$genotypesN];
###   plot(data$C, data$rho, pch=".", col=col, xlim=cnlim, ylim=c(-1,1)/2, xlab=xlab, ylab=ylab);
###   stext(side=3, pos=0, sprintf("Tumor/normal: %s", getNames(cesTN)[1]));
###   stext(side=3, pos=1, sprintf("Chromosome %d (n=%d)", chr, nbrOfUnits));
### 
###   devDone();
### } # if (!isFile(pathname))
### figNameC <- figName;
### 
### figName <- sprintf("%s,Chr%02d,pair,rhoVsBetaN", fullname, chr);
### filename <- sprintf("%s.png", figName);
### pathname <- Arguments$getWritablePathname(filename, path=figPath);
### if (figForce || !isFile(pathname)) {
###   devNew(figDev, pathname, width=width, height=width);
###   par(mar=c(3.5,4,1,1)+0.1, mgp=c(2.5,0.8,0), cex=1.5);
###   subplots(1, ncol=1);
### 
###   if (is.null(data)) {
###     data <- getUnitsToStudy(cesTN, chr, subset=NULL);
###     nbrOfUnits <- data$nbrOfUnits;
###     str(data);
###   }
### 
###   xlab <- "beta[N]";
###   ylab <- "rho=beta[T]-beta[N]";
###   col <- c("blue", "purple", "red")[data$genotypesN];
###   plot(data$betaN[,2], data$rho, pch=".", col=col, xlim=betalim, ylim=c(-1,1)/2, xlab=xlab, ylab=ylab);
###   fit <- attr(data$betaNC, "fit");
###   abline(v=fit$x, lty=3);
###   d <- density(data$betaN[,2], adjust=1.5);
###   d$y <- 0.1*diff(lim)*(d$y/max(d$y)) + par("usr")[3];
###   lines(d, col="#999999", lwd=2);
###   stext(side=3, pos=0, sprintf("Tumor/normal: %s", getNames(cesTN)[1]));
###   stext(side=3, pos=1, sprintf("Chromosome %d (n=%d)", chr, nbrOfUnits));
### 
###   devDone();
### } # if (!isFile(pathname))
### figNameD <- figName;


%>
\begin{figure}[htbp]
 \begin{center}
<% for (figName in figNames) { %>%
  \resizebox{0.24\textwidth}{!}{\includegraphics{<%=figName%>}} %
<% } %>%
 \end{center}
 \caption{Tumor-normal pairs of Allele B fractions of sample <%=sampleName%> on chromosome~<%=chr%>. Data points colored by normal (naive) genotype calls.}
 \label{fig<%=fullname%>}
\end{figure}


<%
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
# TumorBoost calibration
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
figName <- sprintf("%s,Chr%02d,fracB", fullname, chr);
filename <- sprintf("%s.png", figName);
pathname <- Arguments$getWritablePathname(filename, path=figPath);
if (figForce || !isFile(pathname)) {
  devNew(figDev, pathname, width=width, height=1.7*height);
  subplots(4, ncol=1);
  par(mar=c(1.5,4,1,1)+0.1, mgp=c(2.5,0.8,0), cex=1.5);

  if (is.null(data)) {
    data <- getUnitsToStudy(cesTN, chr, subset=NULL);
    nbrOfUnits <- data$nbrOfUnits;
    str(data);
  }

  x <- data$position;
  yys <- list(raw=data$betaT[,2], theta=asTotalFracBSnpData(data$thetaTB)[,2], beta=data$betaTB[,2], polar=asTotalFracBSnpData(data$polarTB)[,2]);
  
  xlab <- "Physical position (Mb)";
  ylabs <- c("beta[T]", "mu*[T]", "mu*[T]", "mu*[T]");
  ylabs[2:4] <- paste(ylabs[2:4], "by", names(yy)[2:4]);
  for (kk in seq(along=yys)) {
    plot(x, yys[[kk]], pch=".", ylim=betalim, xlab=xlab, ylab=ylabs[kk]);
    if (kk == 1) {
      stext(side=3, pos=0, sprintf("Tumor: %s", getFullNames(cesTN)[1]));
      stext(side=3, pos=1, sprintf("Chromosome %d (n=%d)", chr, nbrOfUnits));
    }
  }
  devDone();
} # if (!isFile(pathname))
figNameA <- figName;
%>

<%
figName <- sprintf("%s,Chr%02d,fracB,density", fullname, chr);
filename <- sprintf("%s.png", figName);
pathname <- Arguments$getWritablePathname(filename, path=figPath);
if (figForce || !isFile(pathname)) {
  devNew(figDev, pathname, width=width, height=0.7*height);
  par(mar=c(3.5,4,1,1)+0.1, mgp=c(2.5,0.8,0), cex=1.5);

  if (is.null(data)) {
    data <- getUnitsToStudy(cesTN, chr, subset=NULL);
    nbrOfUnits <- data$nbrOfUnits;
    str(data);
  }
  yy <- list(raw=data$betaT[,2], theta=asTotalFracBSnpData(data$thetaTB)[,2], beta=data$betaTB[,2], polar=asTotalFracBSnpData(data$polarTB)[,2]);

  xlim <- c(0.0,1.0) + c(-1,1)*0.2;
  xlab <- "beta[T]";
  labels <- names(yy);
  cols <- c("black", "red", "blue", "orange");
  plotDensity(yy, lwd=2, col=cols, xlab=xlab);
  abline(v=c(0,1/2,1), lty=3, lwd=2, col="#999999");
  legend("topleft", lwd=2, col=cols, labels);
  stext(side=3, pos=0, sprintf("Tumor: %s", getFullNames(cesTN)[1]));
  stext(side=3, pos=1, sprintf("Chromosome %d (n=%d)", chr, nbrOfUnits));
  devDone();
} # if (!isFile(pathname))
figNameB <- figName;
%>
\begin{figure}[htbp]
 \begin{center}
  \resizebox{0.72\textwidth}{!}{\includegraphics{<%=figNameA%>}}\\ %
  \resizebox{0.50\textwidth}{!}{\includegraphics{<%=figNameB%>}} %
 \end{center}
 \caption{Raw and calibrated allele B fractions for the tumor of sample <%=sampleName%> on chromosome~<%=chr%>.}
 \label{fig<%=fullname%>}
\end{figure}


<% } # for (chr ...) %>


% - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
% END Figure
% - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 



%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Appendix
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\clearpage
\appendix
\part*{Appendix}
\section*{Raw data}
\begin{Verbatim}
<%=rspCapture(cesTN)%>
\end{Verbatim}

\section*{Annotation data}
\begin{Verbatim}
<%=rspCapture(ugp)%>
<%=rspCapture(cdf)%>
\end{Verbatim}

\section*{Session information}
<%=toLatex(sessionInfo())%>



\end{document}
%#####################################################################
% END Document
%#####################################################################


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% HISTORY:
% 2009-03-12
% o WORKAROUND: For some data, the ChrX/Y frac B for the normal is
#   so noisy such that the naive genotyping algorithm can only detect
#   a single genotype group.  In that case we assume it is two groups
#   and use prior thresholds (a,b).
% o FIX: The naive genotyping assumed three genotype groups. Now it
%   also applies to cases with two genotype groups, e.g. Chr X & Y.
% 2009-03-11
% o Created.
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% 
