cc
source("rocH.Rex")
source("rocH.Rex")
source("rocH.Rex")
ff <- findTpAtFp(truth[,cc], sets[[1]]$M[,cc], fpRate=0.005, verbose=verbose); ff
ff <- findTpAtFp(truth[,cc], sets[[1]]$M[,cc], fpRate=0.005, verbose=verbose); ff
ff <- findTpAtFp(truth[,cc], sets[[1]]$M[,cc], fpRate=0.005, verbose=verbose); ff
ff <- findTpAtFp(truth[keep,cc], sets[[1]]$M[keep,cc], fpRate=0.005, verbose=verbose); ff
ff <- findTpAtFp(truth[keep,cc], sets[[2]]$M[keep,cc], fpRate=0.005, verbose=verbose); ff
sum(keep)
str(x)
keep <- (x > 2.8e6);
sum(keep)
str(x)
length(x)
ff <- findTpAtFp(truth[keep,cc], sets[[2]]$M[keep,cc], fpRate=0.005, verbose=verbose); ff
str(sets)
  o <- order(x);
  x0 <- x[o];
  data0 <- data[o,];
  truth0 <- truth[o,];
  n <- nrow(truth0);
  h <- 2;
  idxs <- getBlockAverageMap(n=n, h=h);
  hApprox <- attr(idxs, "hApprox");
  x <- blockAvg(x0, idxs);
  data <- blockAvg(data0, idxs);
  truth <- blockAvg(truth0, idxs);
  set <- sets[[1]];
  data0 <- set$M[o,];
  truth0 <- truth[o,];
  n <- nrow(truth0);
str(truth)
  filename <- "truth.RData";
  pathname <- Arguments$getReadablePathname(filename, path=dataPath, 
                                                     mustExist=TRUE);
  attachLocally(loadObject(pathname));
str(truth)
  set <- sets[[1]];
  data0 <- set$M[o,];
  truth0 <- truth[o,];
  n <- nrow(truth0);
  h <- 2;
  idxs <- getBlockAverageMap(n=n, h=h);
  hApprox <- attr(idxs, "hApprox");
  x <- blockAvg(x0, idxs);
  data <- blockAvg(data0, idxs);
  set <- sets[[1]];
  M0 <- set$M[o,];
  C0 <- truth[o,];
  n0 <- nrow(C0);
  h <- 2;
  idxs <- getBlockAverageMap(n=n0, h=h);
  hApprox <- attr(idxs, "hApprox");
  x <- blockAvg(x0, idxs);
  M <- blockAvg(M0, idxs);
  C <- blockAvg(C0, idxs);
str(M)
str(C)
  M0 <- set$M[o,];
  C0 <- truth[o,];
  n0 <- nrow(C0);
  h <- 2;
  idxs <- getBlockAverageMap(n=n0, h=h);
  hApprox <- attr(idxs, "hApprox");
  set$h <- h;
  set$hApprox <- hApprox;
  set$x <- blockAvg(x0, idxs);
  set$M <- blockAvg(M0, idxs);
  set$truth <- blockAvg(C0, idxs);
  name <- sprintf("%s,h=%.3f", set$name);
  name <- sprintf("%s,h=%.3f", set$name, h);
name
  sets[[name]] <- set;
source("roc.Rex")
source("rocH.Rex")
source("rocH.Rex")
str(sets)
names(sets)
source("roc.Rex")
dev.off()
dev.off()
dev.off()
source("roc.Rex")
dev.set(2)
dev.set(2); source("roc.Rex")
dev.set(2); source("roc.Rex")
dev.set(2); source("roc.Rex")
d
dev.off()
source("roc.Rex")
dev.off()
source("roc.Rex")
names(sets)
  name <- "dChip,ISN,MBEI,A+B,xport";
  set <- sets[[name]];
  M0 <- set$M[o,];
  C0 <- truth[o,];
  n0 <- nrow(C0);
  for (h in 2:5) {
    idxs <- getBlockAverageMap(n=n0, h=h);
    hApprox <- attr(idxs, "hApprox");
    set$h <- h;
    set$hApprox <- hApprox;
    set$x <- blockAvg(x0, idxs);
    set$M <- blockAvg(M0, idxs);
    set$truth <- blockAvg(C0, idxs);
    set$theta <- NULL;
    set$roc <- NULL;
    set$auc <- NULL;
    set$name <- sprintf("%s,h=%.3f", set$name, h);
    name <- sprintf("%s,h=%.3f", name, h);
    sets[[name]] <- set;
  }
str(M)
str(M0)
str(C0)
str(n0)
str(truth)
str(o)
  o <- order(x);
  x0 <- x[o];
  name <- "ACC,+300,RMA,A+B,FLN,-X";
  name <- "dChip,ISN,MBEI,A+B,xport";
  set <- sets[[name]];
  M0 <- set$M[o,];
  C0 <- truth[o,];
  n0 <- nrow(C0);
  for (h in 2:5) {
    idxs <- getBlockAverageMap(n=n0, h=h);
    hApprox <- attr(idxs, "hApprox");
    set$h <- h;
    set$hApprox <- hApprox;
    set$x <- blockAvg(x0, idxs);
    set$M <- blockAvg(M0, idxs);
    set$truth <- blockAvg(C0, idxs);
    set$theta <- NULL;
    set$roc <- NULL;
    set$auc <- NULL;
    set$name <- sprintf("%s,h=%.3f", set$name, h);
    name <- sprintf("%s,h=%.3f", name, h);
    sets[[name]] <- set;
  }
source("roc.Rex")
  names <- names(sets);
  names <- names[(regexpr("h=", names) == -1)];
names
rm(sets)
gc()
source("rocH.Rex")
source("rocH.Rex")
dev.set(2); dev.off()
source("roc.Rex")
sets0 <- sets
  names <- names[(regexpr("CNA[GT]", names) == -1)];
names
sets <- sets[names]
source("roc.Rex")
source("roc.Rex")
str(sets)
rm(sets)
sets <- sets0
  names <- names(sets);
  names <- names[(regexpr("h=", names) == -1)];
  names <- names[(regexpr("CNA[GT]", names) == -1)];
names
  names <- names(sets);
#  names <- names[(regexpr("h=", names) == -1)];
  names <- names[(regexpr("CNA[GT]", names) == -1)];
names
sets <- sets[names]
source("roc.Rex")
sets[[1]]$name <- "CRMA,h=2.000"
sets[[1]]$name <- "CRMA,h=4.000"
sets[[3]]$name <- "CRMA,h=3.000"
sets[[5]]$name <- "CRMA,h=2.000"
sets[[6]]$name <- "dChip,h=2.000"
sets[[4]]$name <- "dChip,h=3.000"
sets[[2]]$name <- "dChip,h=4.000"
dev.off()
source("roc.Rex")
source("roc.Rex")
dev.off(); source("roc.Rex")
dev.off(); source("roc.Rex")
for (kk in seq(along=sets)) sets[[kk]]$roc <- NULL
for (kk in seq(along=sets)) sets[[kk]]$auc <- NULL
dev.off(); source("roc.Rex")
str(sets[[1]]$roc)
for (kk in seq(along=sets)) sets[[kk]]$roc <- NULL
for (kk in seq(along=sets)) sets[[kk]]$auc <- NULL
source("roc.Rex")
dev.off()
source("roc.Rex")
dev.off(); source("roc.Rex")
dev.off(); source("roc.Rex")
autocorr
library(nlme)
ACF
methods("ACF")
getAnywhere("ACF.lme")
help.start(FALSE)
library(ts)
acf(sets[[1]]$M[keep,1])
x <- sets[[1]]$M[keep,1]
str(keep)
str(sets[[1]])
#acf(sets[[1]]$M[keep,1])
names(sets)
acf(sets[[8]]$M[keep,1])
lh
acf(lh)
acf(sets[[8]]$M[keep,1])
acf(sets[[7]]$M[keep,1])
acf(na.omit(sets[[7]]$M[keep,1]))
acf(na.omit(sets[[6]]$M[keep,1]))
acf(na.omit(sets[[6]]$M[,1]))
set <- sets[[6]]; acf(na.omit(set$M[(set$x > 2.8e6),1]))
set <- sets[[1]]; acf(na.omit(set$M[(set$x > 2.8e6),1]))
set <- sets[[2]]; acf(na.omit(set$M[(set$x > 2.8e6),1]))
set <- sets[[3]]; acf(na.omit(set$M[(set$x > 2.8e6),1]))
set <- sets[[3]]; acf(na.omit(set$M[(set$x > 2.8e6),1]), type="covariance")
set <- sets[[1]]; acf(na.omit(set$M[(set$x > 2.8e6),1]), type="covariance")
set <- sets[[1]]; acf(na.omit(set$M[(set$x > 2.8e6),1]), type="partial")
set <- sets[[1]]; acf(na.omit(set$M[(set$x > 2.8e6),1]), lag.max=15, type="partial")
set <- sets[[1]]; acf(na.omit(set$M[(set$x > 2.8e6),1]), lag.max=15, type="cor")
set <- sets[[1]]; acf(na.omit(set$M[(set$x > 2.8e6),2]), lag.max=15, type="cor")
set <- sets[[1]]; acf(na.omit(set$M[(set$x > 2.8e6),3]), lag.max=15)
set <- sets[[1]]; acf(na.omit(set$M[(set$x > 2.8e6),4]), lag.max=15)
set <- sets[[2]]; acf(na.omit(set$M[(set$x > 2.8e6),4]), lag.max=15)
set <- sets[[1]]; acf(na.omit(set$M[(set$x > 2.8e6),4]), lag.max=15)
set <- sets[[2]]; acf(na.omit(set$M[(set$x > 2.8e6),4]), lag.max=15)
set <- sets[[2]]; acf(na.omit(set$M[(set$x > 2.8e6),1]), lag.max=15)
set <- sets[[2]]; acf(na.omit(set$M[(set$x > 2.8e6),4]), lag.max=15)
set <- sets[[2]]; acf(na.omit(set$M[(set$x > 2.8e6),5]), lag.max=15)
set <- sets[[2]]; acf(na.omit(set$M[(set$x > 2.8e6),6]), lag.max=15)
set <- sets[[2]]; acf(na.omit(set$M[(set$x > 2.8e6),7]), lag.max=15)
set <- sets[[2]]; acf(na.omit(set$M[(set$x > 2.8e6),8]), lag.max=15)
set <- sets[[2]]; acf(na.omit(set$M[(set$x > 2.8e6),9]), lag.max=15)
set <- sets[[2]]; acf(na.omit(set$M[(set$x > 2.8e6),10]), lag.max=15)
set <- sets[[2]]; acf(na.omit(set$M[(set$x > 2.8e6),11]), lag.max=15)
set <- sets[[2]]; acf(na.omit(set$M[(set$x > 2.8e6),4]), lag.max=15)
set <- sets[[3]]; acf(na.omit(set$M[(set$x > 2.8e6),4]), lag.max=15)
set <- sets[[5]]; acf(na.omit(set$M[(set$x > 2.8e6),4]), lag.max=15)
set <- sets[[6]]; acf(na.omit(set$M[(set$x > 2.8e6),4]), lag.max=15)
set <- sets[[7]]; acf(na.omit(set$M[(set$x > 2.8e6),4]), lag.max=15)
set <- sets[[6]]; acf(na.omit(set$M[(set$x > 2.8e6),4]), lag.max=15)
names(sets)
set <- sets[[7]]
ff <- findTpAtFp(truth[keep,cc], sets[[7]]$M[keep,cc], fpRate=0.01, verbose=verbose); ff
str(truth)
str(keep)
keep <- (x > 2.8e6)
str(keep)
ff <- findTpAtFp(truth[keep,cc], sets[[7]]$M[keep,cc], fpRate=0.01, verbose=verbose); ff$tpRate
str(cc)
names(sets)
ff <- findTpAtFp(truth[keep,cc], sets[[5]]$M[keep,cc], fpRate=0.01, verbose=verbose); ff$tpRate
set <- sets[[5]]; ff <- findTpAtFp(set$truth[keep,cc], set$M[keep,cc], fpRate=0.01, verbose=verbose); ff$tpRate
set <- sets[[5]]; keep <- (set$x > 2.8e6); ff <- findTpAtFp(set$truth[keep,cc], set$M[keep,cc], fpRate=0.01, verbose=verbose); ff$tpRate
ff
str(set$roc)
ff <- findTpAtFp(set$truth[keep,cc], set$M[keep,cc], fpRate=0.01, verbose=verbose); ff$tpRate
fit2 <- fitRoc(set$truth[keep,cc], set$M[keep,cc], fpRate=0.01, verbose=verbose);
fit2 <- fitRoc(set$truth[keep,cc], set$M[keep,cc], verbose=verbose);
fit2 <- fitRoc(set$truth[keep,cc], set$M[keep,cc]);
str(fit2)
uu <- (0.009 < fit2@spec & fit2@spec < 0.011)
uu <- which(0.009 < fit2@spec & fit2@spec < 0.011)
uu
fit2@sens[uu]
plot.rocc
plot(fit2)
uu <- which(0.009 < 1-fit2@spec & 1-fit2@spec < 0.011)
uu
fit2@sens[uu]
class(fit2)
getAnywhere(plot.rocc)
methods("plot")
dev.off()
dev.off(); source("roc.Rex")
source("roc.Rex")
gc()
dev.off(); source("roc.Rex")
x11(); plot(fit2, xlim=c(0,0.06), ylim=c(0.94,1))
  abline(h=seq(0,1,by=by), lty=3, lwd=1);
  abline(v=seq(0,1,by=by), lty=3, lwd=1);
class(fit2)
getMethod("plot", "rocc")
methods("plot")
plot.spec
names(sets)
plot(sets[[5]]@roc)
plot(sets[[5]]$roc)
plot(sets[[5]]$roc);   abline(h=seq(0,1,by=by), lty=3, lwd=1);   abline(v=seq(0,1,by=by), lty=3, lwd=1);
plot(sets[[5]]$roc, xlim=c(0,0.6), ylim=c(0.94,1));   abline(h=seq(0,1,by=by), lty=3, lwd=1);   abline(v=seq(0,1,by=by), lty=3, lwd=1);
plot(sets[[5]]$roc, xlim=c(0,0.06), ylim=c(0.94,1));   abline(h=seq(0,1,by=by), lty=3, lwd=1);   abline(v=seq(0,1,by=by), lty=3, lwd=1);
set <- sets[[5]]
fit2 <- fitRoc(set$truth[keep,cc], set$M[keep,cc]);
strKeep)
str(keep)
keep <- (x > 2.8e6)
keep <- (x > 2.8e6)
fit2 <- fitRoc(set$truth[keep,cc], set$M[keep,cc]);
keep <- (set$x > 2.8e6)
fit2 <- fitRoc(set$truth[keep,cc], set$M[keep,cc]);
x11(); plot(fit2, xlim=c(0,0.06), ylim=c(0.94,1))
toCall
fit2 <- fitRoc(set$truth[keep,cc], set$M[keep,cc], toCall=toCall);
fit2 <- fitRoc(set$truth[keep,cc], set$M[keep,cc], call=toCall);
x11(); plot(fit2, xlim=c(0,0.06), ylim=c(0.94,1))
ff <- findTpAtFp(set$truth[keep,cc], set$M[keep,cc], fpRate=0.01, call=toCall, verbose=verbose); ff$tpRate
set <- sets[[6]]; ff <- findTpAtFp(set$truth[keep,cc], set$M[keep,cc], fpRate=0.01, call=toCall, verbose=verbose); ff$tpRate
set <- sets[[6]]; ff <- findTpAtFp(set$truth[keep,cc], set$M[keep,cc], fpRate=0.01, call=toCall); ff$tpRate
set <- sets[[5]]; ff <- findTpAtFp(set$truth[keep,cc], set$M[keep,cc], fpRate=0.01, call=toCall); ff$tpRate
rm(sets)
rm(sets0)
gc()
dev.off(); source("rocH.Rex")
source("rocH.Rex")
source("rocH.Rex")
source("rocH.Rex")
source("rocH.Rex")
source("rocH.Rex")
source("rocH.Rex")
source("rocH.Rex")
source("rocH.Rex")
source("rocH.Rex")
source("rocH.Rex")
source("rocH.Rex")
source("rocH.Rex")
source("rocH.Rex")
source("rocH.Rex")
dev.off(); source("rocH.Rex")
dev.off(); source("rocH.Rex")
dev.off(); source("rocH.Rex")
dev.off(); source("rocH.Rex")
dev.off(); source("rocH.Rex")
dev.off(); source("rocH.Rex")
dev.off(); source("rocH.Rex")
dev.off(); source("rocH.Rex")
names(sets[[1]])
sets[[1]][["hTp_0.0100"]]
dev.off(); source("rocH.Rex")
dev.off(); source("rocH.Rex")
dev.off(); source("rocH.Rex")
dev.off(); source("rocH.Rex")
dev.off(); source("rocH.Rex")
sets[[2]][["hTp_0.0100"]]
sets[[3]][["hTp_0.0100"]]
sets[[4]][["hTp_0.0100"]]
sets[[1]][["hTp_0.0100"]][29,]
sets[[2]][["hTp_0.0100"]][29,]
sets[[3]][["hTp_0.0100"]][29,]
sets[[4]][["hTp_0.0100"]][29,]
nn <- 2
nn <- 20
incl <- 1:20
s <- 1
      tail <- seq(from=length(incl)-s+1, to=length(incl));
tail
      ss <- c(incl[tail], incl[-tail]);
ss
lastRow <- incl
      tail <- seq(from=length(lastRow)-s+1, to=length(lastRow));
      lastRow <- idxs[ceiling(h),];
lastRow
lastRow <- 1:20
      ss <- c(lastRow[tail], lastRow[-tail]);
ss
      lastRow <- c(lastRow[tail], lastRow[-tail]);
dev.off(); source("rocH.Rex")
dev.off(); source("rocH.Rex")
dev.off(); source("rocH.Rex")
dev.off(); source("rocH.Rex")
rm(sets)
dev.off(); source("rocH.Rex")
dev.off(); source("rocH.Rex")
force <- TRUE
dev.off(); source("rocH.Rex")
force <- TRUE
dev.off(); source("rocH.Rex")
dev.off(); source("rocH.Rex")
dev.off(); source("rocH.Rex")
dev.off(); source("rocH.Rex")
dev.off(); source("rocH.Rex")
force <- FALSE
dev.off(); source("rocH.Rex")
dev.off(); source("rocH.Rex")
dev.off(); source("rocH.Rex")
dev.off(); source("rocH.Rex")
dev.off(); source("rocH.Rex")
dev.off(); source("rocH.Rex")
dev.off(); source("rocH.Rex")
sets[[4]][["hTp_0.0100"]][29,]
sets[[4]][["hTp_0.0100"]]
sets[[4]][["hTp_0.0100"]][26,]
dev.off(); source("rocH.Rex")
dev.off(); source("rocH.Rex")
dev.off(); source("rocH.Rex")
sets[[4]][["hTp_0.0100"]][26,]
sets[[3]][["hTp_0.0100"]][26,]
sets[[2]][["hTp_0.0100"]][26,]
sets[[1]][["hTp_0.0100"]][26,]
sets[[1]][["hTp_0.0100"]]
sets[[1]][["hTp_0.0100"]][6:9,]
dev.off(); source("rocH.Rex")
dev.off(); source("rocH.Rex")
dev.off(); source("rocH.Rex")
sets[[1]][["hTp_0.0100"]][6:9,]
sets[[2]][["hTp_0.0100"]][6:9,]
sets[[3]][["hTp_0.0100"]][6:9,]
sets[[4]][["hTp_0.0100"]][6:9,]
sets[[4]][["hTp_0.0100"]]
dev.off(); source("rocH.Rex")
dev.off(); source("rocH.Rex")
dev.off(); source("rocH.Rex")
dev.off(); source("rocH.Rex")
dev.off(); source("rocH.Rex")
sets[[4]][["hTp_0.0100"]]
sets[[4]][["hTp_0.0100"]][40:44,]
sets[[3]][["hTp_0.0100"]][40:44,]
sets[[4]][["hTp_0.0100"]][40:44,]
sets[[4]][["hTp_0.0100"]][40:44,]
gc()
save.image()
sets[[4]][["hTp_0.0100"]][40:44,]
sets[[3]][["hTp_0.0100"]][40:44,]
sets[[2]][["hTp_0.0100"]][40:44,]
sets[[1]][["hTp_0.0100"]][40:44,]
sets[[1]][["hTp_0.0100"]][1,]
sets[[2]][["hTp_0.0100"]][1,]
sets[[3]][["hTp_0.0100"]][1,]
sets[[4]][["hTp_0.0100"]][1,]
dev.off(); source("rocH.Rex")
dev.off(); source("rocH.Rex")
saveObject(list(sets=sets), "TPvResolutionAtFP1_0.RData", compress=FALSE)
gc()
rm(sets)
dev.off(); source("roc.Rex")
dev.off(); source("roc.Rex")
source("roc.Rex")
source("roc.Rex")
dev.off(); source("roc.Rex")
plot(1:length(niceCols), col=niceCols, pch=19, cex=3)
dev.off(); source("roc.Rex")
sets[[1]]$col <- niceCols[10]
dev.off(); source("roc.Rex")
sets[[1]]$col <- niceCols[6]
dev.off(); source("roc.Rex")
sets[[3]]$col <- niceCols[9]
dev.off(); source("roc.Rex")
sets[[2]]$col <- niceCols[5]
dev.off(); source("roc.Rex")
dev.off(); source("roc.Rex")
rm(sets)
dev.off(); source("roc.Rex")
dev.off(); source("roc.Rex")
rm(sets)
dev.off(); source("roc.Rex")
  legend("bottomright", pch=19, lty=ltys, lwd=4, col=cols, legend=labels, bg="#eeeeee");
references
rm(sets); dev.off(); source("roc.Rex")
rm(sets); dev.off(); source("roc.Rex")
rm(sets); dev.off(); source("roc.Rex")
rm(sets); source("roc.Rex")
sets[[5]] <- NULL
sets[[3]] <- NULL
dev.off(); source("roc.Rex")
dev.off(); source("roc.Rex")
dev.off(); source("roc.Rex")
dev.off(); source("roc.Rex")
dev.off(); source("roc.Rex")
rm(sets)
dev.off(); source("roc.Rex")
dev.off(); source("roc.Rex")
sets[[2]]$col <- niceCols[5]
sets[[3]]$col <- niceCols[10]
dev.off(); source("roc.Rex")
library(aroma.affymetrix)
chipType <- "Mapping250K_Nsp"
cdf <- AffymetrixCdfFile$fromChipType(chipType)
cdf
pathname <- file.choose()
pathname
verbose <- Arguments$getVerbose(-5)
timestampOn(verbose)
ces <- CnChipEffectSet$importFromDChip(pathname, cdf=cdf, verbose=verbose)
gc()
ces
gi <- getGenomeInformation(cdf)
xUnits <- getUnitsOnChromosome(gi, 23)
str(xUnits)
theta <- extractMatrix(ces, units=xUnits, verbose=verbose)
saveObject(list(theta=theta), sprintf("%s.RData" getFullName(ces)), compress=FALSE)
saveObject(list(theta=theta), sprintf("%s.RData", getFullName(ces)), compress=FALSE)
dev.off(); source("roc.Rex")
source("roc.Rex")
rm(sets)
source("roc.Rex")
source("roc.Rex")
names(sets)
sets[[3]]$name
sets[[3]]$name <- "dChip,no-outliers"
source("roc.Rex")
rm(sets)
source("roc.Rex")
source("roc.Rex")
rm(sets)
source("roc.Rex")
names(sets)
rm(sets)
source("roc.Rex")
