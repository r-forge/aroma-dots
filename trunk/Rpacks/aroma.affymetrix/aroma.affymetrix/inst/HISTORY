Package: aroma.affymetrix
=========================

Version: 0.7.3 [2007-10-10xx]
o Now the asterisk tags ('*') of the ProbeLevelModels are no longer
  interpreted in the constructor, but by getTags().
o Now PNGs are generated by the Cairo package/device by default, and 
  if that is not available R.utils::png2() [ghostscript via bitmap()], 
  and as a backup grDevices::png().
o BETA: Started to add support for image layers in ChromosomeExplorer.
o BETA: Added low-level methods fitWHRCModel() and fitWHLAPLM().


Version: 0.7.2 [2007-09-30]
o Now the main HTML file for ChromosomeExplorer is ChromosomeExplorer.html,
  which is in analogue to how the ArrayExplorer works.  This HTML now
  loads to a different Javascript file with a different name so that 
  already existing index.html ChromosomeExplorer files will still work.
o By default, all CopyNumberSegmentationModel plots do now display
  non-robust and robust estimates of the standard deviation of the 
  raw CNs across the complete genome.  Note that this is not done 
  segment by segment, so if there are alot of aberrations then these
  estimates will be biased.
o BUG FIX: Forgot to update ExonRmaPlm to handle compatibility issues
  with affyPLM/preprocessCore. See below.
o BUG FIX: The CopyNumberSegmentationModel:s did not support paired
  copy-number analysis by specifying references files explictly.  
  To do this, pass an additional list of CnChipEffectSet:s via 
  constructor argument 'refTuple'.  This list my contain the same
  chip types, and each chip type must contain exactly the same number
  of files.  Note, the hashcode-generated hexadecimal tag added to
  the save CopyNumberSegmentationModel results, but also as part of
  the ChromosomeExplorer image files, will be different in this new
  version, meaning the package will not detect already existing 
  segmentation estimates.  You can always one run chromosome, check
  the new hashcode, and rename existing files to have the same one.
o BUG FIX: Before duplicated tags were removed using unique(), but that
  would also remove duplicated tags that were not "neighbors", e.g.
  the 2nd "-X" tags in "ACC,-X,RMA,A+B,FLN,-X" was removed.  Now
  only duplicated neighboring tags are removed, e.g. "-X,-X,-X".
o ROBUSTNESS: Now getAverageFile() of AffymetrixCelSet detects if an 
  average file has been deleted between calls and recalculates it,
  if missing.
o BETA: Did some "behind the scenes" restructuring of the 
  CopyNumberSegmentationModel by adding an even simpler superclass
  ChromosomalModel, allowing for simpler types of modelling along
  the chromosomes.
o CLEAN UP: Moved several classes to aroma.affymetrix.extras that
  are haven't been updated in a long time and are likely to be broken.
  This was done in order make this package easier to maintain. If this
  broke something for you, please contact me.
o Package pass R CMD check on R v2.6.0 beta and all of the redundancy
  tests.  The redundancy tests are now available under testScripts/
  in the package directory.


Version: 0.7.1 [2007-09-18]
o Now fit() of CopyNumberSegmentationModel reports timing 
  information for each chromosome fitted when in verbose mode.
o Now importFromAffymetrixNetAffxCsvFile() of AromaUgpFile averages
  positions if multiple positions were available for a particular unit.
o ROBUSTNESS: Made createFrom() of AffymetrixCelFile fail safe, 
  that is, the destination file will not be created unless it 
  is complete.  This is done by first create/writing to a temporary
  file which is then renamed at the end. This should minimize the 
  risk of creating incomplete CEL files.
o ROBUSTNESS: Added internal fileCopy() which copies a file via
  a temporary file which is renamed.  All file copying in the
  package is now done via this method.
o CLEAN UP: Removed obsolete copyFile() from AffymetrixFile in
  favor of copyTo() in GenericDataFile.
o BETA: Added trial version of ScaleNormalization.
o BUG FIX: Due to a migration of code from affyPLM to preprocessCore,
  the fit function returned by getFitFunction() would not work with
  affyPLM >= 1.13.9.  Now getFitFunction() adopts to the version of
  affyPLM/preprocessCore installed.  If preprocessCore v0.99.16 or
  newer is available, that is used, otherwise affyPLM v1.13.8 or older
  is used. This has been veried to work on i) R v2.5.1pat with 
  affyPLM v1.12.0, and R v2.6.0alpha with preprocessCode v0.99.16.
  (affyPLM v1.13.6).
o BUG FIX: The workaround storing single-probe sdTheta estimates 
  as a small value was set for single-*chip* not probe cases.
o BUG FIX: getFragmentLengths() of UflSnpInformation would thrown 
  an error "Unknown fields: fragmentLength".  Now getDataColumns() 
  returns the correct names.


Version: 0.7.0 [2007-09-15]
o Now it is possible to specify the genome used for segmentation and
  plotting. This can be done either via argument 'genome' in the
  constructor or by setGenome() of CopyNumberSegmentationModel.
  A corresponding <genome>(,<tags>)*,chromosomes.txt file should be
  put in annotationData/genomes/<genome>/. If not found there, the
  file is searched for in the annotationData/ directory installed
  with the package. If the file is not found, setGenome() will give
  an error.  If not specified, the genome defaults to "Human".  
  The above file specifies the number of bases per chromosome, 
  which is used when plotting chromosomal data.  The previous file
  'hgChromosomes.txt' is now deprecated and obsolete.
o Now CopyNumberSegmentationModel only adds cytobands to genomes
  for which cytoband information is available.  Currently this is
  hardwired only the "Human" genome. For all other genomes, there
  will be no cytoband.
o Now AllelicCrosstalkCalibration corrects also non-SNP PM cells by 
  substracting a global offset and rescaling towards target average.
  The global offset is calculated as the weighted average of all
  allelic offsets. SNP probes are calibrated in the same way as before.
o Updated all places with SNP regular expression "^SNP" to "SNP_" in
  order to also match units named "AFFX-SNP_...".
o SPEED UP: Now getCellMap() of ChipEffectFile caches (large) results 
  to file.
o SPEED UP: Now getOutputDataSet() of FragmentLengthNormalization set 
  and pass down 'mergeStrands' and 'combineAlleles' to ditto of the 
  super class, if applicable.  This way we avoid having to infer those
  arguments from the contents of the files.  This gives an significant
  speed up for large chip types.
o ROBUSTNESS: Now the RmaPlm fit function detects cases where a probe 
  get zero weight for all arrays. In such (rare) cases, parameter 
  estimates equals NAs. Before an LAPACK error was thrown.
o ROBUSTNESS: Added validate that the 'name' of an AffymetrixCelSet 
  and AffymetrixCelFile is of at least length one.
o ROBUSTNESS: Now isDone() of Transform throws an error if too many 
  output files are found. Before it used to return FALSE.
o WORKAROUND: If there is only one probe, then fit function of AvgPlm
  would return theta=y:s, and sdTheta=0:s.  However, when searching 
  for units to do, we test (sdTheta <= 0).  The workaround is to store 
  the smallest float available instead of zero.
o BETA: Added GenericDataFile, GenericDataFileSet, and GenericTabularFile.
o BETA: Added AffymetrixTabularFile, AffymetrixNetAffxCsvFile, 
  AromaUgpFile, and AromaUflFile.
o BETA: Added UflSnpInformation and UgpGenomeInformation 
  interfacing to UGP and UFL files.
o BETA: Added AvgPlm, AvgSnpPlm, AvgCnPlm.
o BUG FIX: Now more effort is made to ensure that all CEL files are
  generated with an upper-case filename extension (*.CEL) and not (*.cel).
  Thanks Jeremy Silver for reporting problems on this.
o Package passes R CMD check on R v2.5.1pat & R v2.6.0alpha on Windows XP.
  It also passes all redundancy tests on Linux.


Version: 0.6.2 [2007-09-07]
o Now setCdf() of AffymetrixCelSet throws an (informative) error message 
  whenever one tries to use an ASCII CDF file. This behavior can be 
  changed by setting rule 'aroma.affymetrix.settings$rules$allowAsciiCdfs'
  to TRUE in the options. The reason is that working with ASCII CDF files
  is extremely slow and memory inefficient. Use affxparser::convertCdf() 
  to convert a CDF into a binary format.
o Updated AllelicCrosstalkCalibration internally.  It now also stores 
  the model parameter estimates to file (using a plain save() file format).
o MEMORY OPTIMIZATION: Instead of doing unlist(getCellIndices(cdf, ...), 
  use.names=FALSE), we can now do getCellIndices(cdf, useNames=FALSE, 
  unlist=TRUE), which is much more memory efficient, e.g. for the
  GenomeWideSNP_6 chip the former uses 25x more memory, which means
  that instead of using 1.4GB we can get away with 60MB.
o CLEAN UP: All calibrateAllelicCrosstalk() methods are now removed.
  Use the AllelicCrosstalkCalibration class instead.
o Package passes R CMD check on R v2.5.1 and R v2.6.0 devel on Windows.
  All redundancy tests works on Linux.


Version: 0.6.1 [2007-09-05]
o Added support for fitting copy-number regions using the (fast)
  Circular Binary Segmentation (CBS) method of Venkatraman et al. (2007).
  The method is implemented by the new CbsModel class.  Consider this
  class to be very much in a beta version.
o Added super class CopyNumberSegmentationModel, which provides most of
  the framework to fit and plot segmentation models. By subclassing
  this class, new segmentation methods can be added. Current subclasses
  are GladModel and CbsModel.  ChromosomeExplorer was updated to handle
  multiple segmentation methods.
o Now the startup message when loading the package is generated with
  packageStartupMessage() so that it can be suppressed.
o Put more effort in generating more consistent hash codes that becomes
  part of the filenames of the averaged files.  This modification is 
  likely to lead to new hashcodes, and there for new filenames such 
  that aroma.affymetrix will not detect existing "average" files.
  In turn, this will mean that stored results from GladModel will
  not be recognized (unless you rename files with the new hashcodes).
o Added a "patch" to make sure that there is rowMedians() supporting 
  missing values by looking for the correct version of Biobase,
  R.native or just an apply() notes.  This does unfortunately mean
  that generated hashcodes my be different so certain average CEL
  files will be recalculated, and in turn segmentation results will
  be regenerated.
o PACKAGE DEPENDENCIES: Made R.native an "Supports" package, since it
  is only used for rowMedians() in case the right Biobase version is 
  not availble.  R.native is now optional.
o CLEAN UP: Deleted obsolete /inst/chromosomeExplorer/ from source.
o CLEAN UP: Removed some obsolete affxparser patches.
o BUG FIX: getAverageFile() of AffymetrixCelSet had 'na.rm=FALSE'
  by default, which caused a lot of missing values in the average.
  In turn, this cause for instance raw CNs to become missing values.
o BUG FIX: When calling process() on a GcRmaBackgroundCorrection,
  an exception would be thrown with "bgAdjustGcrma() is deprecated.
  Please use the GcRmaBackgroundCorrection class".  The same happend
  with OpticalBackgroundCorrection.  This was due to a typo introduced
  in v0.5.3 when making the underlying functions deprecated.  Thanks
  Jeremy Silver for troubleshooting and reporting this.


Version: 0.6.0 [2007-08-17]
o Steps have been taken to support working with Calvin CEL files.  This 
  is still in testing, but from first tests it looks like it is working.
o Now calculateResidualSet() of ProbeLevelModel only loads probe-affinity
  estimates if needed, i.e. if residuals are already calculated this 
  function will return faster now.
o Now createFrom(..., methods="create", clear=FALSE) of AffymetrixCelFile 
  will first create an empty file, and then copy all CEL data to the
  new file.  This way createFrom(..., methods="create", clear=FALSE)
  and createFrom(..., methods="copy", clear=FALSE) should give CEL
  files containing the same data.  createFrom() also accepts a vector
  of options in 'methods' (renamed from 'method') which will be tried
  in order until success.
o Now getImage() of AffymetrixCelFile defaults to no interleaving, 
  i.e. argument defaults to interleaved="none".  The reason for this
  is that the previous default "auto" did not work too well and 
  sometimes turned on interleaving although not needed.  So, now
  one has to use interleaved="auto" ("v" or "h") when for instance
  getting images for spatial PLM residuals where an PM-only fit was
  done to a chip with MMs (otherwise every 2nd line will be blank).
  This also affects the ArrayExplorer; you pass the 'interleaved'
  argument via the process() call.
o Added support for dChip's 'snp6.0 genome info hg18.txt' file.  Note,
  this only contains informations for SNPs, not CN probes.
o MEMORY OPTIMIZATION: calculateResidualSet() of ProbeLevelModel does
  part of the work in chunks.
o MEMORY OPTIMIZATION: Made getCellIndices() of AffymetrixCdfFile more
  memory effiencent by reading and transforming data in chunks.
o MEMORY OPTIMIZATION: Made findUnitsTodo() of ChipEffectFile scan
  for units in chunks.  This would bring done memory usage to about
  5% of what is used to consume.
o MEMORY OPTIMIZATION: Now getAlleleProbePairs() of AffymetrixCdfFile 
  processes the CDF in chunks in order to save memory.  Before, 
  processing the GenomeWideSNP_6.CDF would consume 1.5-2.0GB RAM, but 
  now it is using less than 500MB.
o MEMORY OPTIMIZATION: ArrayExplorer now garbage collects after each
  image written.  That save a few hundred MB.
o BUG FIX: Removed internal trial encoding function added by mistake 
  to the previous version.
o CLEAN UP: Removed findUnitsTodo() from ExonChipEffectFile, because it 
  gave the same result as the one in super class ChipEffectFile. 
o Package passes R CMD check on R v2.5.1 and R v2.6.0 devel.
o Package passes all redundancy tests.


Version: 0.5.6 [2007-08-10]
o Package passes R CMD check on R v2.5.1 and R v2.6.0 devel.
o AffymetrixFileSet class defines lapply(), which causes lapply()
  to redefined as a generic function, which in turn gives some 
  overhead to "standard" lapply() calls due to method dispatching.
  All standard lapply() calls are now called as base::lapply().
  Benchmarking: This changes makes fit() on SNP 10K roughly 10% faster.
o Now all generated CEL files are written with upper-case filename
  extension (*.CEL).  The main reason for this is that some other
  software don't recognize CEL files with lower-case extension (*.cel).
  Existing CEL files that are in lower case (*.cel) and that are
  generated by the package are renamed to upper case (*.CEL).
  Same thing for generated CDF files.
o BUG FIX: ArrayExplorer assumed identical sample names and color maps
  across chip types and plots.  Now the set of samples and color maps
  displayed are unique for each chip type.


Version: 0.5.5 [2007-08-03]
o MISC: Keeping the normalizeAverage() that was moved to aroma.light,
  so that the the package works with aroma.light v1.4.x that comes
  with the BioC release.  This means that it is only 'aroma.affymetrix', 
  'aroma.apd', and (optional) 'R.native' that are not on CRAN/BioC.
o This version was used at the BioC2007 practical.


Version: 0.5.4 [2007-08-02]
o Renamed static fromName() of AffymetrixCelSet to byName().
o Renamed fromChipType() of AffymetrixCdfFile to byChipType().
o Some of the dependencies were to weak in the DESCRIPTION file.
  Added explicit version dependencies also for Suggests and Imports
  packages.
o BUG FIX: getCellMap() of ChipEffectFile would give an error if
  verbose output was on.


Version: 0.5.3 [2007-07-13]
o Package passes R CMD check on Rv2.5.1 (and R v2.6.0 devel).
o Package passes all (#1 and #2) redundancy test sets available on
  the group page.  This was confirmed on R v2.5.1 on WinXP (1.5GB RAM).
o Now more verbose output is generated when a monocell CDF is created
  in the background.
o Added getFileFormat() to AffymetrixCdfFile and AffymetrixCelFile.
  These are also reported by the corresponding print() method.
o Made bgAdjustOptical(), bgAdjustRma(), and bgAdjustGcRma() deprecated.
  If used, an error will be thrown.  Use the Optical-, Rma-, and 
  GcRmaBackgroundCorrection classes instead.
o MEMORY OPTIMIZATION:  Includes a patch to affxparser:::.initializeCdf()
  to make it much more memory efficient, e.g. when writing the CDF
  header unit names, it could consume >1.5GB RAM, whereas now it is
  in the order of 100-200MB.  This patch will go away as soon as 
  the affxparser package incorporates it.
o MEMORY OPTIMIZATION:  Includes a patch to base::matrix() that does not
  create an extra copy when assigned a new value to a cell, e.g. the 2nd 
  statement in the following would force a new copy of the matrix:
  x <- matrix(0, 5000,5000); x[1,1] <- 1;  Thanks to Luke Tierney for
  troubleshooting and suggesting a patch; there are no immediate plans
  to include this patch in 'base' though.
o BUG FIX: Now (private) createMonoCell() of AffymetrixCdfFile will
  build the monocell CDF to a temporary filename, and only when it is
  done, rename it to the final *,monocell.cdf filename.  This will
  lower the risk for creating an invalid CDF, which for instance can
  happen if we run out of memory.  Reading invalid CDFs will core 
  dump R due to the affxparser and the Fusion SDK package.
o BUG FIX: The memory usage of fit() of the FirmaModel would increase
  linearly with the number of arrays processed.  This was because 
  read results where cached for each of the FirmaFile:s.  Thanks Mark
  Robinson for reporting on this.
o BUG FIX: getOutputDataSet() of Transform would give "Error in 
  fromFiles.AffymetrixCelSet(static, path = path, pattern = pattern,:
  formal argument "checkChipType" matched by multiple actual arguments".
  This was due to the recent adding of 'checkChipType=FALSE'.  Fixed
  by adding 'checkChipType=FALSE' to fromFiles() of ChipEffectSet.
  Thanks Jeremy Silver at WEHI for report and troubleshooting this.


Version: 0.5.2 [2007-06-25]
o BUG FIX: When getOutputDataSet() retrieved the output data set, the chip
  type of the CEL files would be validated against the path name, also when
  then CDF of the input set was overriden.  Now the output data set is
  setup using 'checkChipType=FALSE'.  Thanks Mark Robinson for 
  troubleshooting this.


Version: 0.5.1 [2007-06-12]
o Moved normalizeAverage() to aroma.light.
o BUG FIX: When argument 'transforms' to getImage() of AffymetrixCelFile
  wasn't a list, then "Error: argument "transform" is missing, with no
  default" was thrown.  Thanks Karen Vranizan, UC Berkeley for reporting
  this problem.
o BUG FIX: If an Affymetrix probe tab file is not found for the chip type,
  computeAffinitities() of AffymetrixCdfFile would throw "Error in 
  paste(..., sep = sep, collapse = collapse): object "pattern" not found"
  instead of an intended and more information error.
o BUG FIX: getSiblings() for AffymetrixCelSet was broken.
o BUG FIX: Called getFile(ces, ...) instead of  getFile(this, ...) in
  fitGlad() of CnChipEffectSet.  If the GladModel was used to fit the
  GLAD model this bug has not affected the modelling.
o BUG FIX: Used getFileName() instead of getFilename() in exportToAPT()
  of SnpChipEffectSet.
o Replaced all require(<pkgname>) with require("<pkgname>").
o Package passes R CMD check on Rv2.6.0 devel.  This new version of
  R CMD check does a lot more validation on the code and several 
  potential problems were found this way.


Version: 0.5.0 [2007-05-10]
o Package passes R CMD check on Rv2.5.0 (and R v2.4.1).
o Package pass redundancy tests on R v2.5.0 (and R v2.4.1). This was
  confirmed to work on Windows XP.
o getProbeAffinityFile() of ExonRmaPlm did not return the correct subclass.
o Added default zoom levels to updateSamplesFile() for ChromosomeExplorer.  
  This is applies the first time process() is called.
o Removed dependency of the R.image package by removing writeSpatial()
  for the AffymetrixCelFile class.  Use writeImage() instead.
o Now patchPackage(..., deleteOld=TRUE) removes not only old patches, but
  also patches that are older than the package itself.  Thus, when loading
  the package, all old patches are automatically removed.
o Added argument 'apply=TRUE' to downloadPackagePatch() so that downloaded
  patches are applied immediately after being downloaded.
o BUG FIX: calibrateAllelicCrosstalk() for AffymetrixCelFile would output
  filenames containing only the name but not the tags.
o BUG FIX: If no valid timestamp was identified in the CEL header by
  getTimestamp() of AffymetrixCelFile, then as.character() would give
  "Error in sprintf(fmt, ...) : zero-length argument".  Now it returns
  NA instead as a fall back if no valid timestamp is found.  Thanks
  Mark Robinson, WEHI, for reporting this.
o BUG FIX: getRegions() and getLog2Ratios() of GladModel would give an 
  error if only a subset of the chromosomes where queried.


Version: 0.4.9 [2007-04-22]
o BUG FIX: Added missing getExclCells() to QuantileNormalization.
  Thanks Elizabeth Purdom for the report.


Version: 0.4.8 [2007-04-19]
o Now non-positive signals are given weight zero when being fitted
  in the IWLS algorithm for the log-additive model of RmaPlm. 
  This requires affyPLM v1.11.14.  Thanks Ben Bolstad for adding
  support for weights.
o BUG FIX: getChipEffectSet() and getProbeAffinityFile() of the
  ExonRmaPlm class did not set the 'mergeStrands' parameter.  
  Thanks Elizabeth Purdom for the fix.


Version: 0.4.7 [2007-04-12]
o BUG FIX: fromFiles() of AffymetrixCelSet would give error "Exception: 
  Pathname not found: annotationData/samples" if that directory was 
  missing.  Now it is instead created.
o BUG FIX: readData() of SampleAnnotationFile would open a text 
  connection without closing it.  This would eventually given an
  error about too many open connections.
o BUG FIX: There was a if (TRUE) {} statement in calculateResidualSet() 
  that was supposed to be if (!fource) {} in the release version.
o BUG FIX: fromDataFile() of ResidualFile returned an AffymetrixCelFile
  but not a ResidualFile.  This caused getResidualSet() of ProbeLevelModel
  to return a ResidualSet containing AffymetrixCelFile:s.  The same
  bug was found for the WeightFile class.


Version: 0.4.6 [2007-04-04]
o BUG FIX: Loading aroma.affymetrix v0.4.5 (and v0.4.4?) on Windows
  would give: "Error in digest::digest(..., skip = skip, ascii = 
  ascii) : unused argument(s) (skip = "auto", ascii = FALSE)".
o BUG FIX: Static fromFiles() in ChipEffectSet did not call ditto in
  super class AffymetrixCelSet but instead the one in grand-parent 
  super class AffymetrixFileSet.
o Now fromFiles() in AffymetrixCelSet verifies that the CDF being
  assigned to the data set is compatible with the CEL files, i.e.
  have the same number of cells.  The default is to infer the
  chip type from the name of the parent directory of the CEL files,
  but if that chip type is not compatible the chip type according
  to the the first CEL file will be used for the set.


Version: 0.4.5 [2007-04-03]
o Now AllelicCrosstalkCalibration rescales by default allele A and 
  allele B signals such  that the get the same averages.
o Added ETA to verbose output of fit() for the ProbeLevelModel.
o BUG FIX: Probe-affinities were not save, resulting in all zeroes.
  This was due to renaming getProbeAffinites() to getProbeAffinityFile().
o BUG FIX: ChipEffectGroupMerge would catch warnings (like errors)
  when create output CEL files, e.g. when getRelativePath() gave
  an unimportant warning.
o BUG FIX: getFitUnitFunction() for CnPlm was broken for PM-MM 
  probe models for single group units, e.g. AFFX units, resulting 
  in an error "Argument 'y' must have two dimensions: 3".
o BUG FIX: getFitUnitFunction() of CnPlm did not handle probe
  model "min1(pm-mm)".

WORK IN PROGRESS (no guarantees):
o Now RmaPlm:s can handle non-positive signals either by setting the
  to a small number or to ignore them when fitting the PLM.  See code
  of fit function(s) for more details.
o Added AffymetrixTsvFile to read the CNAT v4 "covariate" files.
o Added GcContentNormalization.


Version: 0.4.4 [2007-03-26]
o Added BackgroundCorrection classes RmaBackgroundCorrection,
  GcRmaBackgroundCorrection, and OpticalBackgroundCorrection.  
  These replaces methods bgAdjustRma(), bgAdjustRcRma(), and
  bgAdjustOptical() which are now deprecated.
o The ArrayExplorer class now handles multiple chip types.
o Now inferParameters() of the ChipEffectSet classes is looking
  at the 'intensity' (==theta) field instead of 'stdvs'.  The 
  reason for this is that 'stdvs' might be all zeros, e.g. after
  a fragment-length normalization.
o BUG FIX: clearCache() of AffymetrixCelSet did not clear the 
  .readUnitsCache field.

WORK IN PROGRESS (no guarantees):
o Added AffymetrixCelSetTuple.
o Added the SpatialReporter class.
o Added the abstract Explorer class.
o Added calculateBaseline() to ChipEffectSet.
o Replaced all occurances of affxparser::copyCel() with createFrom()
  in AffymetrixCelFile.
o Lines of code: grep -v "#" *.R | wc -l => 24902


Version: 0.4.3 [2007-03-15]
o Updated the GladModel to only work with chromosome indices (integers).
o Now the GladModel infers the set of possible chromosomes from the
  GenomeInformation file.  This means it handles other genomes than
  the human genome better.
o Updated GenomeInformation to return chromosomes as indices and never
  with 'X' and 'Y' regardless of source.  This is part of a moving the
  package to handle chromosomes as indices so that it will work with
  any genome not just the human.
o Fixed fit() for FirmaModel so that it checks array-by-array
  whether units have been fitted.
o Names of cache files are now made more consistent between
  R versions (and platforms) resulting in more cache hits 
  and therefore faster processing.
o Now the package tries to keep the search path of packages in
  such an order that any package known to cause problems to
  aroma.affymetrix if loaded after aroma.affymetrix, will be
  inserted behind aroma.affymetrix in the search path. For example,
  loading the EBImage package after aroma.affymetrix used to cause
  complaints when calling display() on an ArrayExplorer.
o Replaced argument 'moreCells' with 'ram' and removed argument
  'cellsPerChunk' in getAverageFile() of AffymetrixCelSet.
o BUG FIX: getAverageFile() of AffymetrixCelSet would average the wrong
  set of cells if argument 'indices' was different from NULL.
o BUG FIX: Argument '...' to plotDensity() of AffymetrixCelFile and
  AffymetrixCelSet are no longer passed to identifyCells().
o BUG FIX: calculateResiduals() of ProbeLevelModel would give 
  non-zero residuals for cells not fitted by the PLM. 
o BUG FIX: plotNuse() and plotRle() did not handle outliers
  correctly.
o BUG FIX: Changed default filenames for FIRMA scores to 
  "%s,FIRMAscores.CEL" rather than "%s,FIRMAresults.CEL" for 
  consistency with FirmaModel.
o BUG FIX: extractSnpQSet() would give "Error: object "cleancdfname"
  not found" if the 'affy' package was not loaded.
o BUG FIX: getCellIndices() in CnChipEffectFile would give 
  "Error in fcn(.subset2(unit, "groups"), ...) : object "odds"
  not found" for units with other than 1, 2, or 4 groups.
o MEMORY OPTIMIZATION: Further optimized memory usage in:
  calculateResiduals() of ProbeLevelModel.
o Lines of code: grep -v "#" *.R | wc -l => 24106

WORK IN PROGRESS (no guarantees):
o Added getUnitGroupCellMap() to AffymetrixCdfFile.
o Added code for in-memory attributes to AffymetrixFile object.
  Certain filename tags are interpreted as attributes which are
  set when the AffymetrixFile object is instantiated. 
  Note: Attributes are *not* carried over in transforms etc.
o Added the AromaGenomePositionFile class and subclasses
  AromaUgpFile and AromaCgpFile.
o Added extractMatrix() for ChipEffectSet.


Version: 0.4.2 [2007-02-28]
o Now patches in patches/aroma.affymetrix/<date>/ are sourced
  when the package is loaded.  To download the latest patches,
  see the package's group page.
o Added argument 'region' to getUnitsOnChromosome() of the
  GenomeInformation class.
o BUG FIX: setColorMaps() gave "Error in addColorMap.ArrayExplorer(
  this, colorMap, ...) : object "nbrOfColors" not found".
o BUG FIX: The output data set as returned by getOutputDataSet() or
  process() of QuantileNormalization lost the any CDF overridden in
  the input data set.  The only time it did pass down the CDF was
  when process() was called the first time (so that it actually
  normalized the arrays).  The fix was to make getOutputDataSet() in
  Transform to pass down the CDF too.
o BUG FIX: process() of ChromosomeExplorer would give an error saying
  'Error in file(file, ifelse(append, "a", "w")) ... cannot open file
   /*****************...'.


Version: 0.4.1 [2007-02-22]
o Fixed the warning about "'tzone' attributes are inconsistent". See
  code of as.character() for explanation.
o Now fromFiles() of AffymetrixCelSet accepts argument 'chipType' to 
  override any chip type specified in the CEL headers. This is useful
  in case different CEL files refers to different chip types, which can
  be the case for mixed generations of CEL files.  Also added a scan of 
  chip types.
o Added support for using Windows shortcuts for CDF files, that is, you
  can use a Windows Shortcut annotationData/chipTypes/Foo/Foo.cdf.lnk
  to link to annotationData/chipTypes/Bar/Bar.cdf, and whenever using
  AffymetrixCdfFile to locate the CDF for chip type 'Foo' you will get
  the CDF for chip type 'Bar', e.g. AffymetrixCdfFile$fromChipType('Foo').
o BUG FIX: calculateWeights() of ExonRmaPlm now makes sure residuals
  are calculated first.
o BUG FIX: When creating a monocell, the output did not strip of the tags
  from the chip type, e.g. annotationData/Foo,core/For,core,monocell.cdf
  instead of annotationData/Foo/For,core,monocell.cdf. 
o BUG FIX: An update to the GladModel class added to previous version
  would not recognize CEL files with same sample name but different
  tags to belong to the same sample.
o BUG FIX: calculateResiduals() would erase previously calculated
  residual files and not re-create them correctly.
o The annotation labels at the right of all graphics in the 
  ChromosomeExplorer are now made slightly larger.
o Now the table of CNRs generated by the GladModel give links
  to 'hg17' instead of 'hg18' because 'hg17' is the version of
  the dChip genome information files, which are the only one
  currently supported.
o Package passes R CMD check on R v2.4.1 (many empty help pages though).
o Lines of code: grep -v ^# *.R | wc -l => 21772

Version: 0.4.0 [2007-02-16]
o Package passes R CMD check on R v2.4.1 (many empty help pages though).
o Verified that the current version works on total copy number analysis
  for combined Nsp & Sty chips.  See the aroma.affymetrix group page
  for the example.
o Added trial version of ExonRmaPlm().
o Added trial versions of ResidualSet() and WeightSet().
o Added test for correct directory structure to fromFiles().  This will
  enforce users to use the correct structure so that for instance the
  name of the data set is correctly inferred.
o Added calculateResiduals() to ProbeLevelModel and the ResidualSet
  and ResidualFile classes.
o Now monocell CDF are names <chipType>,monocell.cdf.  Before a dash
  was used instead of a comma. This new style is more in line with
  the <name>,<tags> naming convention used elsewhere in the package.
  Note: Since there are parameter CEL files referring to the old
  <chipType>-monocell, AffymetrixCdfFile$findByChipType() will detect
  this and look for <chipType>,monocell instead. Thus, it should be
  safe to rename the monocell CDF file.
o Now any annotation file for chip type <chipType> may be located 
  under annotationData/chipTypes/<chipType>/. This directory 
  structure is preferred, because this will allow you to collect 
  all your annotation files specific to one particular chip type 
  in one place.  You may even put the in subdirectories, e.g. 
  Affymetrix/, dChip/ etc.
o From now on all reporters and explorer utilizes the root path
  reports/, and the path to an image file should be 
  reports/<dataSetName>/<tags>/<chipType>/<set>/.
  The latter subdirectory was added to avoid potential naming
  conflicts for different reporter or explorer classes.
o Remove package dir doc/.  Not used.
o Added writeChecksum() and validateChecksum() to AffymetrixFile
  to write a checksum file, which later can be validated to the
  content of the file.  This is useful to make sure that 
  transferred files have not been corrected (which happend to 
  HB while transferring via external HDD).

Version: 0.3.6 [2007-02-05]
o Added support to import dChip-exported CEL files.  See
  importFromDChip() in AffymetrixCelSet.
o Now QuantileNormalization() takes an AffymetrixCelFile as a 
  target distribution too, cf argument 'targetDistribution'.
o Now the file cache is organized into subdirectories starting
  with "aroma.affymetrix/".  This makes it easier clear the
  cache.
o Trial: Added SampleAnnotationFile class. File format is not
  settled yet.
o Trial: Removed the 4% left and right extension of xlim from the 
  plots and enforced 50px margins outside on both sides.  This 
  will make it easier to map the horizontal location in pixels 
  to megabases.  

Version: 0.3.5 [2007-01-22]
o BUG FIX: Somehow hgChromosomes.txt disappeared from the last
  versions of the package. Readded.
o Now fromChipType() of DChipGenomeInformation recognized 
  the Mapping10K_Xba142 genotype information files too, meaning
  getGenotypeInformation() of AffymetrixCdfFile will also 
  recognize it.  Same updates were done for dChip SNP 
  information files.
o Now the default sample of the ChromosomeExplorer is the first
  sample (and not the 8th, which was left in there while I was
  debugging).  The default chromosome is 1 (not 21st).

Version: 0.3.4 [2007-01-20]
o Passes R CMD check on v2.4.1.
o BUG FIX: When trying to load CDFs (and in some other cases
  too), the GLAD package (and some other packages) wer loaded
  although they are only "suggested" packages.  This was due
  to how the constructor of some classes were implemented.

Version: 0.3.3 [2007-01-17]
o Passes R CMD check on v2.4.0.
o BUG FIX: For some reason does clearCache() of Object not
  clear out all cached fields. Until I've figured out what
  is wrong, I've added explicit clearCache() to classes using
  cached fields.
o The FragmentLengthNormalization class forgot to clear cache
  after cloning input data set.  This caused the output data
  set to get the same average file as the input data set.
o Added classes QualityAssessmentModel, QualityAssessmentSet,
  and QualityAssessmentFile.
o Now createMonoCell() create the CDF in chunks, that is, 
  in constant memory.
o Now plot() of GladModel gets the default 'hgChromosomes.txt' 
  of the package if it can't be found in annotations/.
o BUG FIX: createMonoCell() of AffymetrixCdfFile would give
  an errounous mono-cell CDF file due to a recent change.

Version: 0.3.2 [2007-01-07]
o Package pass R CMD check v2.4.0.
o Tested the package from scratch analysis 19 Mapping250K_Nsp
  and 16 Mapping250K_Sty (15 in common) for total copy-number
  analysis. Steps involved: quantile normalization, RMA 
  probe-level modelling, PCR fragment-length normalization,
  and combined GLAD modelling.  This was done in WinXP Pro
  on an IBM X61 with 1.5GB RAM.  Memory usage peaked at
  approximately 1GB.
o Some optimization of what is cached in memory and what
  is cached on file.  Only for some data classes for now.
o Replaced old GladModel with new MultiGladModel, which
  is now named GladModel.
o Added AffineCnPlm for completeness.
o The ChromosomeExplorer class now generates a complete
  working ChromosomeExplorer web page.
o WORKAROUND: If 'affy' is loaded after aroma.affymetrix,
  which happens when loading 'affyPLM', affy will overload
  the generic function plotDensity() with a regular function
  breaking that method in aroma.affymetrix. The solution
  is to make sure 'affy' is always loaded before, which was done
  by adding 'affy' to 'Depends:' in DESCRIPTION.  We have the
  same problem with the 'oligo' package, which is required by
  the CrlmmModel class.  However, for now, we leave that package
  under 'Suggests:'.

Version: 0.3.2 [2007-01-06]
o Major changes.
o Renamed all Preprocessing classes to Transform classes.
o Introduced trial version of a top-level Model class in 
  order to minimize repeated code.
o Made several methods "private" in order to hide them
  form the HTML help tables.  Developers should rely on
  source code and Rdoc comments for now.

Version: 0.3.1 [2007-01-05]
o Package pass R CMD check v2.4.0 (with one warning I suspect
  is a bug in R CMD check).
o Some code was moved to 'affxparser' (v1.7.3) so it is 
  recommended to update to that as soon as it is available
  on the Bioconductor servers.
o Added initial code for PLASQ, but more is still needed.
o In addition to default "PM only" model, ProbeLevelModel:s now
  also handles "PM-MM" models.  Note that PM-MM might give a 
  non-positive value.  The multiplicate MbeiPlm handles this,
  but also the log-additive RmaPlm where such values become NAs.


Version: 0.3.0 [2006-12-20]
o Made fitGlad() for classes CnChipEffectFile and CnChipEffectSet
  deprecated.  Use the GladModel class instead.


Version: 0.3.0 [2006-12-08]
o Major updates. See below.
o Change in directory structures.  Now all probe-level data
  is outputted to probeData/, and all PLM data to plmData/.
  Data from the GladModel is stored to gladData/.  Data sets
  with the same name processed in different ways will be 
  distinguishable by their tags.
o Pre-processing methods have now been split up in two major
  classes, the ProbePreprocessing and ChipEffectPreprocessing
  (both inheriting from the Preprocessing class) to indicate
  that they operate on probe-level and chip-effect data, 
  respectively. All ProbePreprocessing classes output data 
  to the probeData/ directory, and the ChipEffectPreprocessing
  class to the plmData/ directory.
o ProbePreprocessing classes:
  QuantileNormalization replaces QuantileNormalizer. 
  AlleleCrosstalkCalibration replaces AlleleCrosstalkCalibrator.
  PcrProbeCalibration corrects for PCR effects due to oligo 
  sequence and SNP fragment lengths, cf. CRLMM.
Adapted from oligo.
o ChipEffectPreprocessing classes:
  FragmentLengthNormalization to normalize for PCR fragment-
  length effects after PLM, cf. CNAG.
o Added the PlatformDesign class which provides an interface to 
  a platform-design package without loading the package.  This
  is used for instance by the PcrProbeCalibration class.


Version: 0.2.6 [2006-12-07]
o The recently added methods below makes it possible to store
  FeatureSet data to CEL files, which will further simplify 
  bridging the aroma.affymetrix and the oligo package.
o Added protected importFeatureSet() to import probe signals
  from a single-sample oligo::FeatureSet object. 
o Added static method createBlankSet() to AffymetrixCelSet
  to create a set of blank CEL files.
o BUG FIX: The internal cache for readUnits() of ChipEffectFile 
  classes was not sensitive to neither class nor parameters
  specific to subclasses.
o Added trial version of writeWig() to CnChipEffectSet to export
  log2 copy numbers to the UCSC Genome Browser.


Version: 0.2.5 [2006-11-22]
o Package pass R CMD check.
o Added GladModel.  Now it is fairly simple to estimate total 
  copy numbers from Affymetrix 10K, 100K and 500K data sets.
o Added support for tags to most classes.
o Made encode() and decode() of ParameterCelFile approx 2-3 times
  faster by skipping the encode-/decodeUnit() step and instead
  call the encode and decode functions directly.  This will
  speed up the updating of chip-effect files about two times.
o Added R.native to the list of suggested packages. The reason
  for this is that getAverageFile() of AffymetrixCelSet is
  using rowMedians(x, na.rm) of R.native.  The version in Biobase
  does not handle missing values.  In case R.native is not
  installed, apply() and median() are used.
o Added SE estimates in RmaPlm from new affyPLM.


Version: 0.2.4 [2006-10-28]
o Added more Rdoc comments.


Version: 0.2.3 [2006-10-23]
o Added gcrma background correction.  Contributed by Ken Simpson,
  WEHI, Melbourne.
o Added extractAffyBatch() to AffymetrixCelSet extracting data
  applicable to methods in the affy package.
o Added extractSnpFeatureSet() to AffymetrixCelSet and 
  extractSnpQSet() to SnpChipEffectSet extracting data applicable 
  to methods in the oligo package.
o Added trial versions of AffymetrixSnpCdfFile, GenotypeCallFile,
  GenotypeCallSet etc.


Version: 0.2.2 [2006-09-16]
o Added basic support for dChip genome information.  It is good
  enough though to work with the 100K and 500K SNP chips.
o Package now passes R CMD check.  Some cheating were done though,
  because methods with missing Rdoc where put as \alias{}:es in
  one place.


Version: 0.2.1 [2006-09-07]
o Another big change in how classes are named.


Version: 0.2.0 [2006-08-25]
o Have done a big redesign of the package. There are now also
  some basic model fitting algorithm available.  Probe-affinity
  estimates are stored in CEL files. Soon chip effects will also
  be stored in CEL files using customized CDF files that we very
  can write using the affxparser package.


Version: 0.1.5 [2006-07-2x]
o BUG FIX: The 'outPath' argument of normalizeQuantile() in the 
  AffymetrixDataset class was not recognized.


Version: 0.1.4 [2006-07-24]
o Important breakthrough: We've update affxparser v1.5.3 with a working
  updateCel() function to update CEL v4 files.  This makes it possible
  to write normalized probe-level data as CEL files, e.g. now you can
  use normalizeQuantile(..., format="cel") to generate CEL files.  Note
  that this only works with binary CEL files (v4); ASCII CEL files (v3)
  and Calvin CEL files (upcoming binary format) is not supported.
o Now findCdf() throws an exception if CDF file is not found.


Version: 0.1.3 [2006-07-05]
o BUG FIX/WORKAROUND: Currently the affxparser code crash R if the file 
  is not a valid CEL file.  The best we can do now is to test that the
  filename has suffix *.CEL.  Thanks Ken Simpson, WEHI, Melbourne for
  pointing this out.


Version: 0.1.2 [2006-06-13]
o Made the static fromFile() and fromFiles() methods more
  generic such that it is easier to subset the different
  classes, e.g. for SNP chip classes.


Version: 0.1.1 [2006-05-30]
o Cleaned up the API and the Rd help.
o "Finalized" the quantile normalization.


Version: 0.1.0 [2006-01-11]
o Created.
